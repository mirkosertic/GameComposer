<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.mirkosertic</groupId>
        <artifactId>gamecreator</artifactId>
        <version>0.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>gameengine-editor</artifactId>
    <name>GameComposer Web Editor</name>
    <packaging>war</packaging>

    <scm>
        <url>https://github.com/mirkosertic/GameComposer</url>
        <connection>scm:git:https://github.com/mirkosertic/GameComposer.git</connection>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>bowerinstall</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <exec executable="bower" dir="src/main/webapp">
                                    <arg value="install"/>
                                    <arg value="--config.directory=${project.build.directory}/bower/bower_components"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${project.build.directory}/generated/js</directory>
                        </resource>
                        <resource>
                            <directory>${project.build.directory}/bower</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.teavm</groupId>
                <artifactId>teavm-maven-plugin</artifactId>
                <version>${teavm.version}</version>
                <executions>
                    <execution>
                        <id>web-client</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <targetDirectory>${project.build.directory}/generated/js/teavm</targetDirectory>
                            <mainClass>de.mirkosertic.gameengine.web.WebUI</mainClass>
                            <!-- Whether TeaVM should produce minified JavaScript. Can reduce JavaScript file size more than
                                 two times -->
                            <minifying>false</minifying>
                            <!-- Whether TeaVM should produce debug information for its built-in debugger -->
                            <debugInformationGenerated>true</debugInformationGenerated>
                            <!-- Whether TeaVM should produce source maps file -->
                            <sourceMapsGenerated>true</sourceMapsGenerated>
                            <!-- Whether TeaVM should also put source files into output directory,
                                 for compatibility with source maps -->
                            <sourceFilesCopied>true</sourceFilesCopied>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>

        <dependency>
            <groupId>de.mirkosertic</groupId>
            <artifactId>gameengine-teavmcommon</artifactId>
        </dependency>

        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-classlib</artifactId>
            <version>${teavm.version}</version>
        </dependency>

        <!-- JavaScriptObjects (JSO) - a JavaScript binding for TeaVM -->
        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-jso</artifactId>
            <version>${teavm.version}</version>
        </dependency>

        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-jso-apis</artifactId>
            <version>${teavm.version}</version>
        </dependency>

        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-tooling</artifactId>
            <version>${teavm.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>2.6.3</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.6.3</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>platform-linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>bowerinstall</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <target>
                                        <exec executable="bower" dir="src/main/webapp">
                                            <arg value="install"/>
                                            <arg value="--config.directory=${project.build.directory}/bower/bower_components"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>vulcanize</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <exec executable="vulcanize" dir="${project.build.directory}/${project.build.finalName}">
                                            <arg value="gameeditor-allcomponents.html"/>
                                            <arg value="--out-html"/>
                                            <arg value="${project.build.directory}/${project.build.finalName}/gameeditor-allcomponents-vulcanized.html"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>electronpackager</id>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/electron"/>
                                        <copy todir="${project.build.directory}/electron">
                                            <fileset dir="${project.build.directory}/${project.build.finalName}"/>
                                        </copy>
                                        <copy todir="${project.build.directory}/electron">
                                            <fileset dir="${project.basedir}/src/main/node/resources"/>
                                            <filterset>
                                                <filter token="VERSION" value="${project.version}"/>
                                            </filterset>
                                        </copy>
                                        <exec executable="npm" dir="${project.build.directory}/electron">
                                            <arg value="install"/>
                                        </exec>
                                        <exec executable="electron-packager" dir="${project.build.directory}/electron">
                                            <arg value="."/>
                                            <arg value="--all"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>platform-windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>bowerinstall</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <target>
                                        <exec executable="bower.cmd" dir="src/main/webapp">
                                            <arg value="install"/>
                                            <arg value="--config.directory=${project.build.directory}/bower/bower_components"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>vulcanize</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <exec executable="vulcanize.cmd" dir="${project.build.directory}/${project.build.finalName}">
                                            <arg value="gameeditor-allcomponents.html"/>
                                            <arg value="--out-html"/>
                                            <arg value="${project.build.directory}/${project.build.finalName}/gameeditor-allcomponents-vulcanized.html"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>electronpackager</id>
                                <phase>package</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}/electron"/>
                                        <copy todir="${project.build.directory}/electron">
                                            <fileset dir="${project.build.directory}/${project.build.finalName}"/>
                                        </copy>
                                        <copy todir="${project.build.directory}/electron">
                                            <fileset dir="${project.basedir}/src/main/node/resources"/>
                                            <filterset>
                                                <filter token="VERSION" value="${project.version}"/>
                                            </filterset>
                                        </copy>
                                        <exec executable="npm.cmd" dir="${project.build.directory}/electron">
                                            <arg value="install"/>
                                        </exec>
                                        <exec executable="electron-packager.cmd" dir="${project.build.directory}/electron">
                                            <arg value="."/>
                                            <arg value="--all"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>